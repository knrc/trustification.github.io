"use strict";(self.webpackChunktrustification_io=self.webpackChunktrustification_io||[]).push([[1390],{3905:(e,t,n)=>{n.d(t,{Zo:()=>g,kt:()=>d});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=i.createContext({}),l=function(e){var t=i.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},g=function(e){var t=l(e.components);return i.createElement(c.Provider,{value:t},e.children)},u="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,g=o(e,["components","mdxType","originalType","parentName"]),u=l(n),m=r,d=u["".concat(c,".").concat(m)]||u[m]||p[m]||a;return n?i.createElement(d,s(s({ref:t},g),{},{components:n})):i.createElement(d,s({ref:t},g))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,s=new Array(a);s[0]=m;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[u]="string"==typeof e?e:r,s[1]=o;for(var l=2;l<a;l++)s[l]=n[l];return i.createElement.apply(null,s)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4574:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>l});var i=n(7462),r=(n(7294),n(3905));const a={title:"How to Configure a Gitsign Cache",authors:"danbev",tags:["sigstore"]},s=void 0,o={permalink:"/blog/2022/12/05/gitsign-cache",editUrl:"https://github.com/trustification/trustification.github.io/tree/main/blog/2022-12-05-gitsign-cache.md",source:"@site/blog/2022-12-05-gitsign-cache.md",title:"How to Configure a Gitsign Cache",description:"This post contains the steps for setting up",date:"2022-12-05T00:00:00.000Z",formattedDate:"December 5, 2022",tags:[{label:"sigstore",permalink:"/blog/tags/sigstore"}],readingTime:1.15,hasTruncateMarker:!0,authors:[{name:"Daniel Bevenius",title:"Maintainer",url:"https://github.com/danbev",imageURL:"https://github.com/danbev.png",key:"danbev"}],frontMatter:{title:"How to Configure a Gitsign Cache",authors:"danbev",tags:["sigstore"]},prevItem:{title:"An Adventure with the CycloneDX Maven Plugin",permalink:"/blog/2022/12/09/cyclonedx-maven-plugin-adventure"},nextItem:{title:"Keyless Git Signing with Sigstore",permalink:"/blog/2022/12/02/sign-commits-with-sigstore"}},c={authorsImageUrls:[void 0]},l=[],g={toc:l},u="wrapper";function p(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,i.Z)({},g,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"This post contains the steps for setting up\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/sigstore/gitsign/tree/main/cmd/gitsign-credential-cache"},"gitsign-credential-cache"),".\nwhich is useful if one has to perform multiple commits in short succession, or\nwhen doing a rebase."),(0,r.kt)("p",null,"It can be somewhat frustrating to have the browser open for every single\ncommit. For these situations a cache can be enabled using the instructions in\nthis post."),(0,r.kt)("p",null,"First install ",(0,r.kt)("inlineCode",{parentName:"p"},"gitsign-credential-cache")," if it is not already installed:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"$ go install github.com/sigstore/gitsign/cmd/gitsign-credential-cache@latest\n")),(0,r.kt)("p",null,"Create a file named ",(0,r.kt)("inlineCode",{parentName:"p"},"~/.config/systemd/user/gitsign.service"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"[Unit]\nDescription=Gitsign Credentials Cache\nDocumentation=https://github.com/sigstore/gitsign\n\n[Service]\nType=simple\nExecStart=%h/go/bin/gitsign-credential-cache\n\nRestart=on-failure\n\n[Install]\nWantedBy=default.target\n")),(0,r.kt)("p",null,"This service can then be enabled using:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"$ systemctl --user daemon-reload\n$ systemctl --user enable gitsign.service\nCreated symlink /home/danielbevenius/.config/systemd/user/default.target.wants/gitsign.service \u2192 /home/danielbevenius/.config/systemd/user/gitsign.service.\n")),(0,r.kt)("p",null,"And we can start it manually using:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"$ systemctl --user start gitsign.service\n")),(0,r.kt)("p",null,"Check that it has started successfully:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"$ systemctl --user status gitsign.service\n\u25cf gitsign.service - Gitsign Credentials Cache\n     Loaded: loaded (/home/danielbevenius/.config/systemd/user/gitsign.service; enabled; vendor preset: disabled)\n     Active: active (running) since Mon 2022-11-28 11:27:47 CET; 2min 35s ago\n       Docs: https://github.com/sigstore/gitsign\n   Main PID: 177444 (gitsign-credent)\n     CGroup: /user.slice/user-1000.slice/user@1000.service/app.slice/gitsign.service\n             \u2514\u2500 177444 /home/danielbevenius/go/bin/gitsign-credential-cache\n\nNov 28 11:27:47 localhost.localdomain systemd[1295]: Started Gitsign Credentials Cache.\nNov 28 11:27:47 localhost.localdomain gitsign-credential-cache[177444]: /home/danielbevenius/.cache/.sigstore/gitsig>\n")),(0,r.kt)("p",null,"And we then need to add the following environment variable:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-console"},"$ export GITSIGN_CREDENTIAL_CACHE=~/.cache/.sigstore/gitsign/cache.sock\n")),(0,r.kt)("p",null,'After this we should be able to commit a first time and have our credentials\nstored. Subsequent commits will then be made without a browser "popup".'))}p.isMDXComponent=!0}}]);